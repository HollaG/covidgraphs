extends layout

block content
    script(src="https://cdn.fusioncharts.com/fusioncharts/latest/fusioncharts.js")   
    script(src="https://cdn.fusioncharts.com/fusioncharts/latest/themes/fusioncharts.theme.fusion.js")
    
    //- script(src="/javascripts/fusioncharts.js")
    link(rel="stylesheet" href="/stylesheets/main.css")
    link(rel="stylesheet" href="/stylesheets/mui.min.css")
    
    
    .page-container
        .container
            .text
                h1 COVID-19 Visualisation (Singapore)
                
            .graph
                #chart-container1(class="chart")
                #chart-container2(class="chart")
                #chart-container3(class="chart")
                #chart-container4(class="chart")
                #chart-container5(class="chart")
            //- .graph-options
            //-     button(name="logarithmic" onclick="toggleLog()") Toggle Logarithmic Scale
            //-     br 
            //-     br
            //-     br
            
            .selector-wrapper
                .selector
                    .button-top
                        button(name="1" onclick="changeGraph(1)") Total Cases against Time
                        button(name="2" onclick="changeGraph(2)") New Cases against Time
                    .button-bottom
                        button(name="3" onclick="changeGraph(3)") Recoveries against Time
                        button(name="4" onclick="changeGraph(4)") Total Cases against Time (Logarithmic)
                    .button-table
                        button(type="button" id="changeHtml" name="table" onclick="showTable()" ) Hide raw data
         
            .table(id="hide-table")
                table(class="mui-table mui-table--bordered sticky" id="table1")
                    thead
                        tr
                            th Date
                            th New local dormitory cases (per day)
                            th New local work pass holder cases (per day)
                            th New local community cases (per day)
                            th New local cases (per day)
                            th New imported cases(per day)
                            th New cases (per day)
                            th Total dormitory cases
                            th Total work pass holder cases
                            th Total local community cases
                            th Total local
                            th Total imported
                            th Total cases
                            th Recovered (per day)
                            th Total recovered
                            th Number in ICU (on the day)
                            th Number still in hospital
                    tbody
                        each row in rows
                            tr
                                td=row["Date"]
                                td=row["New local dormitory cases (per day)"]
                                td=row["New local work permit holder cases (per day)"]
                                td=row["New local community cases (per day)"]
                                td=row["New local cases (per day)"]
                                td=row["New imported cases(per day)"]                                
                                td=row["New cases (per day)"]
                                td=row["Total dormitory cases"]
                                td=row["Total work permit holder cases"]
                                td=row["Total local community cases"]
                                td=row["Total local"]
                                td=row["Total imported"]
                                td=row["Total cases"]
                                td=row["Recovered (per day)"]
                                td=row["Total recovered"]
                                td=row["# ICU (on the day)"]
                                td=row["# still in hospital"]
                            


                    
                    //- button(name="5" onclick="changeGraph(5)") New Cases against Total Cases

            //- .table
            //-     table
            //-         tr
            //-             th Date
            //-             th Total cases
            //-         each row in rows
            //-             tr
            //-                 td=row.Date
            //-                 td=row["Total cases"]
    
    
    script.
        var charts = document.getElementsByClassName("chart")
        if(window.innerHeight > window.innerWidth){ // Portrait
            var charts = document.getElementsByClassName("chart")
            for (var i = 0; i < charts.length; i++) { 
                charts[i].style.height = "800px"                    
            }
        }   
        var query = window.matchMedia("(orientation:landscape)")
        function screenTest(e) { 
            var charts = document.getElementsByClassName("chart")
            
            if (!e.matches) { 
                for (var i = 0; i < charts.length; i++) { 
                    charts[i].style.height = "800px"                    
                }
                
            } else { 
                for (var i = 0; i < charts.length; i++) { 
                    charts[i].style.height = "45vw"                    
                }   
            }
        }
        query.addListener(screenTest)
    script.
        function changeGraph(graph) {
            var charts = document.getElementsByClassName("chart")
            console.log(charts)
            for (var i = 0; i < charts.length; i++) {
                charts[i].style.display = "none"
            }
            hider.unhideAllColumns()
            switch (graph) { 
                case 1: 
                    document.getElementById("chart-container1").style.display = "block"; 
                    hider.hideColumns([2,3,4,5,6,7,11,13,14,15,16,17]);
                    break
                case 2: 
                    document.getElementById("chart-container2").style.display = "block";
                    hider.hideColumns([4,6,7,8,9,10,11,12,14,15,16,17]); 
                    break
                case 3: 
                    document.getElementById("chart-container3").style.display = "block";
                    hider.hideColumns([2,3,4,5,6,7,8,9,10,11,12,14,16]);  
                    break
                case 4: 
                    document.getElementById("chart-container4").style.display = "block"; 
                    hider.hideColumns([2,3,4,5,6,7,8,9,10,11,12,14,15,16,17]);  
                    break
                case 5: 
                    document.getElementById("chart-container5").style.display = "block"; 
                    break
            }
        }
        var hidden = false
        function showTable() { 
            console.log(hidden)
            if (!hidden) { 
                hidden = true
                document.getElementById("hide-table").style.display = "none"
                document.getElementById("changeHtml").innerHTML = "Show raw data"
            } else { 
                hidden = false
                document.getElementById("hide-table").style.display = "block"
                document.getElementById("changeHtml").innerHTML = "Hide raw data"
            }
        }

    script.
        
        var data1 = !{stringify(data1)}
        var schema1 = !{stringify(schema1)}
        let fusionDataStore1 = new FusionCharts.DataStore();
        let fusionTable1 = fusionDataStore1.createDataTable(data1, schema1);
        var chart1 = new FusionCharts({
            type: 'timeseries',
            renderAt: 'chart-container1',
            width: "100%",
            height: "100%",
            dataSource: {
                data: fusionTable1,
                chart: {
                    setadaptiveymin: 0,
                    exportEnabled: "1"
                },
                caption: {
                text: 'Cases in Singapore against Time'
                },
                yAxis: [{
                    "plot": {
                        "value": "Case Numbers",
                        "type": "area",
                        style: {
                            plot: {
                                "fill-opacity": "0.8"
                            }
                        }
                    },
                    //- "type": "log"
                   
                }],
                "series": "Case Type"
            }
            }).render()
    
    script.
        var data2 = !{stringify(data2)}
        var schema2 = !{stringify(schema2)}
        let fusionDataStore2 = new FusionCharts.DataStore();
        let fusionTable2 = fusionDataStore2.createDataTable(data2, schema2);
        new FusionCharts({
            type: 'timeseries',
            
            renderAt: 'chart-container2',
            width: "100%",
            height: "100%",
            dataSource: {
                data: fusionTable2,
                chart: {
                    showvalues: "1",
                    multicanvas: false,
                    exportEnabled: "1"
                },
                caption: {
                    text: 'New Cases in Singapore against Time'
                },
                series: "Case Type",
                yAxis: [{
                    "plot": [{
                        "value": "Case Numbers",
                        type: "column"
                    }]
                }, { 
                    plot: [{ 
                        value: "Total Cases",
                        type: "line"

                    }]
                }
                ]
                
                
            }
            }).render()        
        //- var dataSource2 = !{stringify(dataSource2)}
        //- console.log(dataSource2)
        //- FusionCharts.ready(function() {
        //-     new FusionCharts({
        //-         type: "stackedcolumn2d",
        //-         renderAt: "chart-container2",
        //-         width: "100%",
        //-         height: "100%",
        //-         dataFormat: "json",
        //-         dataSource: dataSource2,
                
        //-     }).render();
        //- });


    script.
        var data3 = !{stringify(data3)}
        var schema3 = !{stringify(schema3)}
        let fusionDataStore3 = new FusionCharts.DataStore();
        let fusionTable3 = fusionDataStore3.createDataTable(data3, schema3);
        new FusionCharts({
            type: 'timeseries',
            renderAt: 'chart-container3',
            width: "100%",
            height: "100%",
            dataSource: {
                data: fusionTable3,
                chart: {                    
                    "xFormatNumberScale": "0",
                    exportEnabled: "1"
                },
                caption: {
                    text: 'Recoveries in Singapore against Time'
                },
                yAxis: [{
                    "plot": {
                        "value": "Cases",
                    }
                }],
                "series": "Case Type"
            }
        }).render() 
                    
    script.
        var data4 = !{stringify(data4)}
        var schema4 = !{stringify(schema4)}
        let fusionDataStore4 = new FusionCharts.DataStore();
        let fusionTable4 = fusionDataStore4.createDataTable(data4, schema4);
        new FusionCharts({
            type: 'timeseries',
            renderAt: 'chart-container4',
            width: "100%",
            height: "100%",
            dataSource: {
                data: fusionTable4,
                
                chart: {                    
                    "xFormatNumberScale": "0",
                    exportEnabled: "1"
                },
                caption: {
                    text: 'Total cases against Time (logarithmic)'
                },
                yAxis: [{
                    "plot": {
                        "value": "Total Cases",
                    },
                    "type": "log"
                }],
                
            }
        }).render()                      
    script(src="/javascripts/index.js")
    script.
        var TableColumnHider = !{HtmlTableColumnHider}
        var hider = new TableColumnHider('#table1')
        hider.hideColumns([2,3,4,5,6,7,11,13,14,15,16,17]);
 
    //- script.
    //-     var data5 = !{stringify(data5)}
    //-     var category5 = !{stringify(category5)}
    //-     //- let fusionDataStore5 = new FusionCharts.DataStore();
    //-     //- let fusionTable5 = fusionDataStore5.createDataTable(data4, schema4);
        
    //-     var myChart = new FusionCharts({ 
    //-         type: "scatter",
    //-         renderAt: "chart-container5",
    //-         width: "100%",
    //-         height: "100%",
    //-         dataFormat: "json",
    //-         theme: "fusion",
    //-         dataSource: { 
    //-             chart: { 
    //-                 caption: "New cases against Total cases (logarithmic)",
                    
                    
    //-                 theme: "fusion",
    //-                 showlegend: "0",
    //-             },
    //-             categories: [
    //-                 {
    //-                     category: category5
    //-                 }
    //-             ],
    //-             dataset: [
    //-                 { 
    //-                     seriesname: "New cases",
    //-                     anchorbgcolor: "5D62B5",
    //-                     data: data5
    //-                 }
    //-             ]
    //-         }
    //-     }).render()
            
        
            
