extends layout

block content
    //- script(src="/javascripts/fusioncharts.js")
    link(rel="stylesheet" href="/stylesheets/main.css")

    
    
    .page-container
        
        .container
            .text
                h1 COVID-19 Visualisation (Singapore)
                p Last updated: #{date}
                p Click the menu icon on the right to export the graph.
                p Click the legend to enable / disable each series.
                
            .graph
                #chart-container1(class="chart")
                #chart-container2(class="chart")
                #chart-container3(class="chart")
                #chart-container4(class="chart")
                #chart-container5(class="chart")
            //- .graph-options
            //-     button(name="logarithmic" onclick="toggleLog()") Toggle Logarithmic Scale
            //-     br 
            //-     br
            //-     br          

            
            .selector-wrapper
                .selector
                    .section
                        select(id='select-graph')                            
                            option(value="1") Graph: Total Cases against Time
                            option(value="2") Graph: New Cases against Time
                            option(value="3") Graph: Recoveries against Time
                            option(value="4") Graph: Total Cases against Time (Logarithmic)                        
                    .section
                        .button-wrapper(onclick="location.href = 'create'" onmouseover="startAnimation()" onmouseout="stopAnimation()")
                            a(class="styled" href="create") Create your own graph <i class="fas fa-angle-right" id='animate'></i>

                    
                    .section
                        .button-wrapper(onclick="showTable()")
                            a(class="styled" id="changeHtml" name="table") Show raw data <i class="fas fa-chevron-up"></i>
                        
                            
                           
         
            .table(id="hide-table")
                table(class="mui-table mui-table--bordered sticky" id="table1")
                    thead
                        tr
                            th.date Date
                            th New local dormitory cases (per day)
                            th New local work pass holder cases (per day)
                            th New local community cases (per day)
                            th New local cases (per day)
                            th New imported cases(per day)
                            th New cases (per day)
                            th Total dormitory cases
                            th Total work pass holder cases
                            th Total local community cases
                            th Total local
                            th Total imported
                            th Total cases
                            th Recovered (per day)
                            th Total recovered
                            th Number in ICU (on the day)
                            th Number still in hospital
                    tbody
                        each row in rows
                            tr
                                td=row["Date"]
                                td=row["New local dormitory cases (per day)"]
                                td=row["New local work permit holder cases (per day)"]
                                td=row["New local community cases (per day)"]
                                td=row["New local cases (per day)"]
                                td=row["New imported cases(per day)"]                                
                                td=row["New cases (per day)"]
                                td=row["Total dormitory cases"]
                                td=row["Total work permit holder cases"]
                                td=row["Total local community cases"]
                                td=row["Total local"]
                                td=row["Total imported"]
                                td=row["Total cases"]
                                td=row["Recovered (per day)"]
                                td=row["Total recovered"]
                                td=row["# ICU (on the day)"]
                                td=row["# still in hospital"]
                            


                    
                    //- button(name="5" onclick="changeGraph(5)") New Cases against Total Cases

            //- .table
            //-     table
            //-         tr
            //-             th Date
            //-             th Total cases
            //-         each row in rows
            //-             tr
            //-                 td=row.Date
            //-                 td=row["Total cases"]
    
    
    script.
        var darkMode = false
        var theme = "fusion"
        var cookie = !{stringify(cookie)}
        if (cookie) { 
            if (cookie.dark_mode == "true") {
                darkMode = true
                theme = "candy"
                document.getElementById("dark-mode-text").innerHTML = "Disable dark mode"
                document.getElementsByTagName("BODY")[0].classList.toggle("dark")  
            }
        }
        function toggleDarkMode() { 
            document.getElementsByTagName("BODY")[0].classList.toggle("dark")      
            if (!darkMode) { 
                // if not darkMode
                darkMode = true;
                chart1.setChartAttribute("theme", "candy")
                chart2.setChartAttribute("theme", "candy")
                chart3.setChartAttribute("theme", "candy")
                chart4.setChartAttribute("theme", "candy")
                // set cookie
                document.cookie = "dark_mode = true"
                document.getElementById("dark-mode-text").innerHTML = "Disable dark mode"
            } else { 
                darkMode = false
                chart1.setChartAttribute("theme", "fusion")
                chart2.setChartAttribute("theme", "fusion")
                chart3.setChartAttribute("theme", "fusion")
                chart4.setChartAttribute("theme", "fusion")
                // set cookie
                document.cookie = "dark_mode = false"
                document.getElementById("dark-mode-text").innerHTML = "Enable dark mode"
            }

        }
        
        
        
        
        
        
        
        
        
        
        var charts = document.getElementsByClassName("chart")
        if(window.innerHeight > window.innerWidth){ // Portrait
            var charts = document.getElementsByClassName("chart")
            for (var i = 0; i < charts.length; i++) { 
                charts[i].style.height = "800px"                    
            }
        }   
        var query = window.matchMedia("(orientation:landscape)")
        function screenTest(e) { 
            var charts = document.getElementsByClassName("chart")
            
            if (!e.matches) { 
                for (var i = 0; i < charts.length; i++) { 
                    charts[i].style.height = "800px"                    
                }
                
            } else { 
                for (var i = 0; i < charts.length; i++) { 
                    charts[i].style.height = "45vw"                    
                }   
            }
        }
        query.addListener(screenTest)
    
        var animate = document.getElementById('animate')      
        function startAnimation() { 
            animate.className = "fas fa-angle-double-right"             
        }
        function stopAnimation() { 
            animate.className = "fas fa-angle-right"
        }
        var select = new SlimSelect({
            select: '#select-graph',
            showSearch: false,
            onChange: (option) => {
                changeGraph(Number(option.value))               
                
            }
        })
        function changeGraph(graph) {
            
            var charts = document.getElementsByClassName("chart")
            
            for (var i = 0; i < charts.length; i++) {
                charts[i].style.display = "none"
            }
            hider.unhideAllColumns()
            switch (graph) { 
                case 1: 
                    document.getElementById("chart-container1").style.display = "block"; 
                    hider.hideColumns([2,3,4,5,6,7,11,13,14,15,16,17]);
                    break
                case 2: 
                    document.getElementById("chart-container2").style.display = "block";
                    hider.hideColumns([4,6,7,8,9,10,11,12,14,15,16,17]); 
                    break
                case 3: 
                    document.getElementById("chart-container3").style.display = "block";
                    hider.hideColumns([2,3,4,5,6,7,8,9,10,11,12,14,16]);  
                    break
                case 4: 
                    document.getElementById("chart-container4").style.display = "block"; 
                    hider.hideColumns([2,3,4,5,6,7,8,9,10,11,12,14,15,16,17]);  
                    break
                case 5: 
                    document.getElementById("chart-container5").style.display = "block"; 
                    break
            }
        }
        var hidden = true
        function showTable() { 
            
            if (!hidden) { 
                hidden = true
                document.getElementById("hide-table").style.display = "none"
                document.getElementById("changeHtml").innerHTML = "Show raw data <i class='fas fa-chevron-up'></i>"
            } else { 
                hidden = false
                document.getElementById("hide-table").style.display = "block"
                document.getElementById("changeHtml").innerHTML = "Hide raw data <i class='fas fa-chevron-down'></i>"
            }
        }

    
        
        var data1 = !{stringify(data1)}
        var schema1 = !{stringify(schema1)}
        let fusionDataStore1 = new FusionCharts.DataStore();
        let fusionTable1 = fusionDataStore1.createDataTable(data1, schema1);
        var chart1 = new FusionCharts({
            type: 'timeseries',
            renderAt: 'chart-container1',
            width: "100%",
            height: "100%",
            
            dataSource: {
                data: fusionTable1,
                chart: {
                    setadaptiveymin: 0,
                    exportEnabled: "1",
                    theme: theme
                    
                },
                caption: {
                text: 'Cases in Singapore against Time'
                },
                yAxis: [{
                    plot: {
                        value: "Case Numbers",
                        type: "area",
                        style: {
                            plot: {
                                "fill-opacity": "0.8"
                            }
                        }
                    },
                    //- "type": "log"
                   
                }],
                "series": "Case Type"
            }
            }).render()
    
    
        var data2 = !{stringify(data2)}
        var schema2 = !{stringify(schema2)}
        let fusionDataStore2 = new FusionCharts.DataStore();
        let fusionTable2 = fusionDataStore2.createDataTable(data2, schema2);
        var chart2 = new FusionCharts({
            type: 'timeseries',
            
            renderAt: 'chart-container2',
            width: "100%",
            height: "100%",
            dataSource: {
                data: fusionTable2,
                chart: {
                    showvalues: "1",
                    multicanvas: false,
                    exportEnabled: "1",
                    theme: theme
                },
                caption: {
                    text: 'New Cases in Singapore against Time'
                },
                series: "Case Type",
                yAxis: [{
                    "plot": [{
                        "value": "Case Numbers",
                        type: "column"
                    }]
                }, { 
                    plot: [{ 
                        value: "Total Cases",
                        type: "line"

                    }]
                }
                ]
                
                
            }
            }).render()        
        


    
        var data3 = !{stringify(data3)}
        var schema3 = !{stringify(schema3)}
        let fusionDataStore3 = new FusionCharts.DataStore();
        let fusionTable3 = fusionDataStore3.createDataTable(data3, schema3);
        var chart3 = new FusionCharts({
            type: 'timeseries',
            renderAt: 'chart-container3',
            width: "100%",
            height: "100%",
            dataSource: {
                data: fusionTable3,
                chart: {                    
                    "xFormatNumberScale": "0",
                    exportEnabled: "1",
                    theme: theme
                },
                caption: {
                    text: 'Recoveries in Singapore against Time'
                },
                yAxis: [{
                    "plot": {
                        "value": "Cases",
                    }
                }],
                "series": "Case Type"
            }
        }).render() 
                    
    
        var data4 = !{stringify(data4)}
        var schema4 = !{stringify(schema4)}
        let fusionDataStore4 = new FusionCharts.DataStore();
        let fusionTable4 = fusionDataStore4.createDataTable(data4, schema4);
        var chart4 = new FusionCharts({
            type: 'timeseries',
            renderAt: 'chart-container4',
            width: "100%",
            height: "100%",
            dataSource: {
                data: fusionTable4,
                
                chart: {                    
                    "xFormatNumberScale": "0",
                    exportEnabled: "1",
                    theme: theme
                },
                caption: {
                    text: 'Total cases against Time (logarithmic)'
                },
                yAxis: [{
                    "plot": {
                        "value": "Total Cases",
                    },
                    "type": "log"
                }],
                
            }
        }).render()                      
    
    
    script.
        var TableColumnHider = !{HtmlTableColumnHider}
        var hider = new TableColumnHider('#table1')
        hider.hideColumns([2,3,4,5,6,7,11,13,14,15,16,17]);
 
    
            
        
            
